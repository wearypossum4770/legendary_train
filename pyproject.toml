# pyproject.toml
# NOTE: you have to use single-quoted strings in TOML for regular expressions.
# It's the equivalent of r-strings in Python.  Multiline strings are treated as
# verbose regular expressions by Black.  Use [ ] to denote a significant space
# character.
[tool.poetry.dev-dependencies]
black = { version = "*", allow-prereleases = true }

#==========================================================================================
# PYTEST - TESTING FRAMEWORK
#==========================================================================================
[tool.pytest.ini_options]
automock_unlocked = true
DJANGO_SETTINGS_MODULE = "legendary_train.settings"
minversion = "6.0"
addopts = "-ra -vv --disable-warnings -W ignore::DeprecationWarning  --verbose --emoji"

python_files = [
  "test.py",
  "tests.py",
  "test_*.py",
  "*_test.py",
  "check_*.py",
  "*_check.py",
  "example_*.py",
  "*_example.py",
]
python_functions = [
  "suite_*",
  "*_suite",
  "test_*",
  "*_test",
  "check_*",
  "*_check",
  "example_*",
  "*_example",
]
python_classes = [
  "Test*",
  "*Test",
  "Check*",
  "Suite*",
  "*Suite",
  "*Check",
  "Example*",
  "*Example",
]
filterwarnings = [
  "error",
  "ignore::UserWarning",
  # note the use of single quote below to denote "raw" strings in TOML
  'ignore:function ham\(\) is deprecated:DeprecationWarning',
]

#testpaths = ["tests"]
#==========================================================================================
# COVERAGE - PYTHON COVERAGE REPORTING  https://coverage.readthedocs.io
#==========================================================================================

[tool.coverage.run]
branch = true

[tool.coverage.report]
# Regexes for lines to exclude from consideration
exclude_lines = [
    # Have to re-enable the standard pragma
    'pragma: no cover',

    # Don't complain about missing debug-only code:
    'def __repr__',
    'if self\.debug',

    # Don't complain if tests don't hit defensive assertion code:
    'raise AssertionError',
    'raise NotImplementedError',

    # Don't complain if non-runnable code isn't run:
    'if 0:',
    'if __name__ == .__main__.:',
]
ignore_errors = true

[tool.coverage.html]
directory = 'coverage_html_report'
#==========================================================================================
# BLACK - PYTHON FORMATTING TOOL  https://github.com/psf/black
#==========================================================================================
[tool.black]
line-length = 88
#target-version = ['py38',]
include = '\.pyi?$'
exclude = '''

(
  /(
      \.eggs         # exclude a few common directories in the
    | \.git          # root of the project
    | \.hg
    | \.mypy_cache
    | \.tox
    | \.venv
    | _build
    | buck-out
    | build
    | dist
    | redis-6.2.2
  )/
  | foo.py           # also separately exclude a file named foo.py in
                     # the root of the project
)
'''

#==========================================================================================
# ISORT - PYTHON IMPORT SORTING  https://pycqa.github.io/isort/
#==========================================================================================
[tool.isort]
profile = "black"
length_sort=true
force_sort_within_sections=true
extend_skip=['.legendary_train']
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
line_length = 88
combine_as_imports = true
